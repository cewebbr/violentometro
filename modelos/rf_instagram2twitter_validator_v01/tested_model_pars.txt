{'memory': None, 'steps': [('proc', ColumnTransformer(transformers=[('cat', 'passthrough',
                                 ['verified', 'protected']),
                                ('num', 'passthrough',
                                 ['followers_count', 'following_count',
                                  'tweet_count', 'listed_count',
                                  'days_created']),
                                ('txt',
                                 Pipeline(steps=[('vec',
                                                  CountVectorizer(stop_words=['de',
                                                                              'a',
                                                                              'o',
                                                                              'que',
                                                                              'e',
                                                                              'é',
                                                                              'do',
                                                                              'da',
                                                                              'em',
                                                                              'um',
                                                                              'para',
                                                                              'com',
                                                                              'não',
                                                                              'uma',
                                                                              'os',
                                                                              'no',
                                                                              'se',
                                                                              'na',
                                                                              'por',
                                                                              'mais',
                                                                              'as',
                                                                              'dos',
                                                                              'como',
                                                                              'mas',
                                                                              'ao',
                                                                              'ele',
                                                                              'das',
                                                                              'à',
                                                                              'seu',
                                                                              'sua', ...]))]),
                                 'description')])), ('fit', RandomForestClassifier(random_state=896787))], 'verbose': False, 'proc': ColumnTransformer(transformers=[('cat', 'passthrough',
                                 ['verified', 'protected']),
                                ('num', 'passthrough',
                                 ['followers_count', 'following_count',
                                  'tweet_count', 'listed_count',
                                  'days_created']),
                                ('txt',
                                 Pipeline(steps=[('vec',
                                                  CountVectorizer(stop_words=['de',
                                                                              'a',
                                                                              'o',
                                                                              'que',
                                                                              'e',
                                                                              'é',
                                                                              'do',
                                                                              'da',
                                                                              'em',
                                                                              'um',
                                                                              'para',
                                                                              'com',
                                                                              'não',
                                                                              'uma',
                                                                              'os',
                                                                              'no',
                                                                              'se',
                                                                              'na',
                                                                              'por',
                                                                              'mais',
                                                                              'as',
                                                                              'dos',
                                                                              'como',
                                                                              'mas',
                                                                              'ao',
                                                                              'ele',
                                                                              'das',
                                                                              'à',
                                                                              'seu',
                                                                              'sua', ...]))]),
                                 'description')]), 'fit': RandomForestClassifier(random_state=896787), 'proc__n_jobs': None, 'proc__remainder': 'drop', 'proc__sparse_threshold': 0.3, 'proc__transformer_weights': None, 'proc__transformers': [('cat', 'passthrough', ['verified', 'protected']), ('num', 'passthrough', ['followers_count', 'following_count', 'tweet_count', 'listed_count', 'days_created']), ('txt', Pipeline(steps=[('vec',
                 CountVectorizer(stop_words=['de', 'a', 'o', 'que', 'e', 'é',
                                             'do', 'da', 'em', 'um', 'para',
                                             'com', 'não', 'uma', 'os', 'no',
                                             'se', 'na', 'por', 'mais', 'as',
                                             'dos', 'como', 'mas', 'ao', 'ele',
                                             'das', 'à', 'seu', 'sua', ...]))]), 'description')], 'proc__verbose': False, 'proc__verbose_feature_names_out': True, 'proc__cat': 'passthrough', 'proc__num': 'passthrough', 'proc__txt': Pipeline(steps=[('vec',
                 CountVectorizer(stop_words=['de', 'a', 'o', 'que', 'e', 'é',
                                             'do', 'da', 'em', 'um', 'para',
                                             'com', 'não', 'uma', 'os', 'no',
                                             'se', 'na', 'por', 'mais', 'as',
                                             'dos', 'como', 'mas', 'ao', 'ele',
                                             'das', 'à', 'seu', 'sua', ...]))]), 'proc__txt__memory': None, 'proc__txt__steps': [('vec', CountVectorizer(stop_words=['de', 'a', 'o', 'que', 'e', 'é', 'do', 'da', 'em',
                            'um', 'para', 'com', 'não', 'uma', 'os', 'no', 'se',
                            'na', 'por', 'mais', 'as', 'dos', 'como', 'mas',
                            'ao', 'ele', 'das', 'à', 'seu', 'sua', ...]))], 'proc__txt__verbose': False, 'proc__txt__vec': CountVectorizer(stop_words=['de', 'a', 'o', 'que', 'e', 'é', 'do', 'da', 'em',
                            'um', 'para', 'com', 'não', 'uma', 'os', 'no', 'se',
                            'na', 'por', 'mais', 'as', 'dos', 'como', 'mas',
                            'ao', 'ele', 'das', 'à', 'seu', 'sua', ...]), 'proc__txt__vec__analyzer': 'word', 'proc__txt__vec__binary': False, 'proc__txt__vec__decode_error': 'strict', 'proc__txt__vec__dtype': <class 'numpy.int64'>, 'proc__txt__vec__encoding': 'utf-8', 'proc__txt__vec__input': 'content', 'proc__txt__vec__lowercase': True, 'proc__txt__vec__max_df': 1.0, 'proc__txt__vec__max_features': None, 'proc__txt__vec__min_df': 1, 'proc__txt__vec__ngram_range': (1, 1), 'proc__txt__vec__preprocessor': None, 'proc__txt__vec__stop_words': ['de', 'a', 'o', 'que', 'e', 'é', 'do', 'da', 'em', 'um', 'para', 'com', 'não', 'uma', 'os', 'no', 'se', 'na', 'por', 'mais', 'as', 'dos', 'como', 'mas', 'ao', 'ele', 'das', 'à', 'seu', 'sua', 'ou', 'quando', 'muito', 'nos', 'já', 'eu', 'também', 'só', 'pelo', 'pela', 'até', 'isso', 'ela', 'entre', 'depois', 'sem', 'mesmo', 'aos', 'seus', 'quem', 'nas', 'me', 'esse', 'eles', 'você', 'essa', 'num', 'nem', 'suas', 'meu', 'às', 'minha', 'numa', 'pelos', 'elas', 'qual', 'nós', 'lhe', 'deles', 'essas', 'esses', 'pelas', 'este', 'dele', 'tu', 'te', 'vocês', 'vos', 'lhes', 'meus', 'minhas', 'teu', 'tua', 'teus', 'tuas', 'nosso', 'nossa', 'nossos', 'nossas', 'dela', 'delas', 'esta', 'estes', 'estas', 'aquele', 'aquela', 'aqueles', 'aquelas', 'isto', 'aquilo', 'estou', 'está', 'estamos', 'estão', 'estive', 'esteve', 'estivemos', 'estiveram', 'estava', 'estávamos', 'estavam', 'estivera', 'estivéramos', 'esteja', 'estejamos', 'estejam', 'estivesse', 'estivéssemos', 'estivessem', 'estiver', 'estivermos', 'estiverem', 'hei', 'há', 'havemos', 'hão', 'houve', 'houvemos', 'houveram', 'houvera', 'houvéramos', 'haja', 'hajamos', 'hajam', 'houvesse', 'houvéssemos', 'houvessem', 'houver', 'houvermos', 'houverem', 'houverei', 'houverá', 'houveremos', 'houverão', 'houveria', 'houveríamos', 'houveriam', 'sou', 'somos', 'são', 'era', 'éramos', 'eram', 'fui', 'foi', 'fomos', 'foram', 'fora', 'fôramos', 'seja', 'sejamos', 'sejam', 'fosse', 'fôssemos', 'fossem', 'for', 'formos', 'forem', 'serei', 'será', 'seremos', 'serão', 'seria', 'seríamos', 'seriam', 'tenho', 'tem', 'temos', 'tém', 'tinha', 'tínhamos', 'tinham', 'tive', 'teve', 'tivemos', 'tiveram', 'tivera', 'tivéramos', 'tenha', 'tenhamos', 'tenham', 'tivesse', 'tivéssemos', 'tivessem', 'tiver', 'tivermos', 'tiverem', 'terei', 'terá', 'teremos', 'terão', 'teria', 'teríamos', 'teriam'], 'proc__txt__vec__strip_accents': None, 'proc__txt__vec__token_pattern': '(?u)\\b\\w\\w+\\b', 'proc__txt__vec__tokenizer': None, 'proc__txt__vec__vocabulary': None, 'fit__bootstrap': True, 'fit__ccp_alpha': 0.0, 'fit__class_weight': None, 'fit__criterion': 'gini', 'fit__max_depth': None, 'fit__max_features': 'sqrt', 'fit__max_leaf_nodes': None, 'fit__max_samples': None, 'fit__min_impurity_decrease': 0.0, 'fit__min_samples_leaf': 1, 'fit__min_samples_split': 2, 'fit__min_weight_fraction_leaf': 0.0, 'fit__n_estimators': 100, 'fit__n_jobs': None, 'fit__oob_score': False, 'fit__random_state': 896787, 'fit__verbose': 0, 'fit__warm_start': False}